/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.fakecompany.flow;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Flow extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1630737207402716099L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Flow\",\"namespace\":\"com.fakecompany.flow\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"agent\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"int\"},{\"name\":\"srcAddr\",\"type\":\"long\"},{\"name\":\"srcAS\",\"type\":\"int\"},{\"name\":\"srcPort\",\"type\":\"int\"},{\"name\":\"srcMask\",\"type\":\"int\"},{\"name\":\"dstAddr\",\"type\":\"long\"},{\"name\":\"dstAS\",\"type\":\"int\"},{\"name\":\"dstPort\",\"type\":\"int\"},{\"name\":\"dstMask\",\"type\":\"int\"},{\"name\":\"inputIface\",\"type\":\"int\"},{\"name\":\"outputIface\",\"type\":\"int\"},{\"name\":\"octets\",\"type\":\"long\"},{\"name\":\"packets\",\"type\":\"long\"},{\"name\":\"tcpFlags\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Flow> ENCODER =
      new BinaryMessageEncoder<Flow>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Flow> DECODER =
      new BinaryMessageDecoder<Flow>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Flow> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Flow> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Flow>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Flow to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Flow from a ByteBuffer. */
  public static Flow fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long timestamp;
  @Deprecated public long agent;
  @Deprecated public int protocol;
  @Deprecated public long srcAddr;
  @Deprecated public int srcAS;
  @Deprecated public int srcPort;
  @Deprecated public int srcMask;
  @Deprecated public long dstAddr;
  @Deprecated public int dstAS;
  @Deprecated public int dstPort;
  @Deprecated public int dstMask;
  @Deprecated public int inputIface;
  @Deprecated public int outputIface;
  @Deprecated public long octets;
  @Deprecated public long packets;
  @Deprecated public int tcpFlags;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Flow() {}

  /**
   * All-args constructor.
   * @param timestamp The new value for timestamp
   * @param agent The new value for agent
   * @param protocol The new value for protocol
   * @param srcAddr The new value for srcAddr
   * @param srcAS The new value for srcAS
   * @param srcPort The new value for srcPort
   * @param srcMask The new value for srcMask
   * @param dstAddr The new value for dstAddr
   * @param dstAS The new value for dstAS
   * @param dstPort The new value for dstPort
   * @param dstMask The new value for dstMask
   * @param inputIface The new value for inputIface
   * @param outputIface The new value for outputIface
   * @param octets The new value for octets
   * @param packets The new value for packets
   * @param tcpFlags The new value for tcpFlags
   */
  public Flow(java.lang.Long timestamp, java.lang.Long agent, java.lang.Integer protocol, java.lang.Long srcAddr, java.lang.Integer srcAS, java.lang.Integer srcPort, java.lang.Integer srcMask, java.lang.Long dstAddr, java.lang.Integer dstAS, java.lang.Integer dstPort, java.lang.Integer dstMask, java.lang.Integer inputIface, java.lang.Integer outputIface, java.lang.Long octets, java.lang.Long packets, java.lang.Integer tcpFlags) {
    this.timestamp = timestamp;
    this.agent = agent;
    this.protocol = protocol;
    this.srcAddr = srcAddr;
    this.srcAS = srcAS;
    this.srcPort = srcPort;
    this.srcMask = srcMask;
    this.dstAddr = dstAddr;
    this.dstAS = dstAS;
    this.dstPort = dstPort;
    this.dstMask = dstMask;
    this.inputIface = inputIface;
    this.outputIface = outputIface;
    this.octets = octets;
    this.packets = packets;
    this.tcpFlags = tcpFlags;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestamp;
    case 1: return agent;
    case 2: return protocol;
    case 3: return srcAddr;
    case 4: return srcAS;
    case 5: return srcPort;
    case 6: return srcMask;
    case 7: return dstAddr;
    case 8: return dstAS;
    case 9: return dstPort;
    case 10: return dstMask;
    case 11: return inputIface;
    case 12: return outputIface;
    case 13: return octets;
    case 14: return packets;
    case 15: return tcpFlags;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestamp = (java.lang.Long)value$; break;
    case 1: agent = (java.lang.Long)value$; break;
    case 2: protocol = (java.lang.Integer)value$; break;
    case 3: srcAddr = (java.lang.Long)value$; break;
    case 4: srcAS = (java.lang.Integer)value$; break;
    case 5: srcPort = (java.lang.Integer)value$; break;
    case 6: srcMask = (java.lang.Integer)value$; break;
    case 7: dstAddr = (java.lang.Long)value$; break;
    case 8: dstAS = (java.lang.Integer)value$; break;
    case 9: dstPort = (java.lang.Integer)value$; break;
    case 10: dstMask = (java.lang.Integer)value$; break;
    case 11: inputIface = (java.lang.Integer)value$; break;
    case 12: outputIface = (java.lang.Integer)value$; break;
    case 13: octets = (java.lang.Long)value$; break;
    case 14: packets = (java.lang.Long)value$; break;
    case 15: tcpFlags = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'agent' field.
   * @return The value of the 'agent' field.
   */
  public java.lang.Long getAgent() {
    return agent;
  }

  /**
   * Sets the value of the 'agent' field.
   * @param value the value to set.
   */
  public void setAgent(java.lang.Long value) {
    this.agent = value;
  }

  /**
   * Gets the value of the 'protocol' field.
   * @return The value of the 'protocol' field.
   */
  public java.lang.Integer getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(java.lang.Integer value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'srcAddr' field.
   * @return The value of the 'srcAddr' field.
   */
  public java.lang.Long getSrcAddr() {
    return srcAddr;
  }

  /**
   * Sets the value of the 'srcAddr' field.
   * @param value the value to set.
   */
  public void setSrcAddr(java.lang.Long value) {
    this.srcAddr = value;
  }

  /**
   * Gets the value of the 'srcAS' field.
   * @return The value of the 'srcAS' field.
   */
  public java.lang.Integer getSrcAS() {
    return srcAS;
  }

  /**
   * Sets the value of the 'srcAS' field.
   * @param value the value to set.
   */
  public void setSrcAS(java.lang.Integer value) {
    this.srcAS = value;
  }

  /**
   * Gets the value of the 'srcPort' field.
   * @return The value of the 'srcPort' field.
   */
  public java.lang.Integer getSrcPort() {
    return srcPort;
  }

  /**
   * Sets the value of the 'srcPort' field.
   * @param value the value to set.
   */
  public void setSrcPort(java.lang.Integer value) {
    this.srcPort = value;
  }

  /**
   * Gets the value of the 'srcMask' field.
   * @return The value of the 'srcMask' field.
   */
  public java.lang.Integer getSrcMask() {
    return srcMask;
  }

  /**
   * Sets the value of the 'srcMask' field.
   * @param value the value to set.
   */
  public void setSrcMask(java.lang.Integer value) {
    this.srcMask = value;
  }

  /**
   * Gets the value of the 'dstAddr' field.
   * @return The value of the 'dstAddr' field.
   */
  public java.lang.Long getDstAddr() {
    return dstAddr;
  }

  /**
   * Sets the value of the 'dstAddr' field.
   * @param value the value to set.
   */
  public void setDstAddr(java.lang.Long value) {
    this.dstAddr = value;
  }

  /**
   * Gets the value of the 'dstAS' field.
   * @return The value of the 'dstAS' field.
   */
  public java.lang.Integer getDstAS() {
    return dstAS;
  }

  /**
   * Sets the value of the 'dstAS' field.
   * @param value the value to set.
   */
  public void setDstAS(java.lang.Integer value) {
    this.dstAS = value;
  }

  /**
   * Gets the value of the 'dstPort' field.
   * @return The value of the 'dstPort' field.
   */
  public java.lang.Integer getDstPort() {
    return dstPort;
  }

  /**
   * Sets the value of the 'dstPort' field.
   * @param value the value to set.
   */
  public void setDstPort(java.lang.Integer value) {
    this.dstPort = value;
  }

  /**
   * Gets the value of the 'dstMask' field.
   * @return The value of the 'dstMask' field.
   */
  public java.lang.Integer getDstMask() {
    return dstMask;
  }

  /**
   * Sets the value of the 'dstMask' field.
   * @param value the value to set.
   */
  public void setDstMask(java.lang.Integer value) {
    this.dstMask = value;
  }

  /**
   * Gets the value of the 'inputIface' field.
   * @return The value of the 'inputIface' field.
   */
  public java.lang.Integer getInputIface() {
    return inputIface;
  }

  /**
   * Sets the value of the 'inputIface' field.
   * @param value the value to set.
   */
  public void setInputIface(java.lang.Integer value) {
    this.inputIface = value;
  }

  /**
   * Gets the value of the 'outputIface' field.
   * @return The value of the 'outputIface' field.
   */
  public java.lang.Integer getOutputIface() {
    return outputIface;
  }

  /**
   * Sets the value of the 'outputIface' field.
   * @param value the value to set.
   */
  public void setOutputIface(java.lang.Integer value) {
    this.outputIface = value;
  }

  /**
   * Gets the value of the 'octets' field.
   * @return The value of the 'octets' field.
   */
  public java.lang.Long getOctets() {
    return octets;
  }

  /**
   * Sets the value of the 'octets' field.
   * @param value the value to set.
   */
  public void setOctets(java.lang.Long value) {
    this.octets = value;
  }

  /**
   * Gets the value of the 'packets' field.
   * @return The value of the 'packets' field.
   */
  public java.lang.Long getPackets() {
    return packets;
  }

  /**
   * Sets the value of the 'packets' field.
   * @param value the value to set.
   */
  public void setPackets(java.lang.Long value) {
    this.packets = value;
  }

  /**
   * Gets the value of the 'tcpFlags' field.
   * @return The value of the 'tcpFlags' field.
   */
  public java.lang.Integer getTcpFlags() {
    return tcpFlags;
  }

  /**
   * Sets the value of the 'tcpFlags' field.
   * @param value the value to set.
   */
  public void setTcpFlags(java.lang.Integer value) {
    this.tcpFlags = value;
  }

  /**
   * Creates a new Flow RecordBuilder.
   * @return A new Flow RecordBuilder
   */
  public static com.fakecompany.flow.Flow.Builder newBuilder() {
    return new com.fakecompany.flow.Flow.Builder();
  }

  /**
   * Creates a new Flow RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Flow RecordBuilder
   */
  public static com.fakecompany.flow.Flow.Builder newBuilder(com.fakecompany.flow.Flow.Builder other) {
    return new com.fakecompany.flow.Flow.Builder(other);
  }

  /**
   * Creates a new Flow RecordBuilder by copying an existing Flow instance.
   * @param other The existing instance to copy.
   * @return A new Flow RecordBuilder
   */
  public static com.fakecompany.flow.Flow.Builder newBuilder(com.fakecompany.flow.Flow other) {
    return new com.fakecompany.flow.Flow.Builder(other);
  }

  /**
   * RecordBuilder for Flow instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Flow>
    implements org.apache.avro.data.RecordBuilder<Flow> {

    private long timestamp;
    private long agent;
    private int protocol;
    private long srcAddr;
    private int srcAS;
    private int srcPort;
    private int srcMask;
    private long dstAddr;
    private int dstAS;
    private int dstPort;
    private int dstMask;
    private int inputIface;
    private int outputIface;
    private long octets;
    private long packets;
    private int tcpFlags;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.fakecompany.flow.Flow.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.agent)) {
        this.agent = data().deepCopy(fields()[1].schema(), other.agent);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocol)) {
        this.protocol = data().deepCopy(fields()[2].schema(), other.protocol);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.srcAddr)) {
        this.srcAddr = data().deepCopy(fields()[3].schema(), other.srcAddr);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.srcAS)) {
        this.srcAS = data().deepCopy(fields()[4].schema(), other.srcAS);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.srcPort)) {
        this.srcPort = data().deepCopy(fields()[5].schema(), other.srcPort);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.srcMask)) {
        this.srcMask = data().deepCopy(fields()[6].schema(), other.srcMask);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.dstAddr)) {
        this.dstAddr = data().deepCopy(fields()[7].schema(), other.dstAddr);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dstAS)) {
        this.dstAS = data().deepCopy(fields()[8].schema(), other.dstAS);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.dstPort)) {
        this.dstPort = data().deepCopy(fields()[9].schema(), other.dstPort);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.dstMask)) {
        this.dstMask = data().deepCopy(fields()[10].schema(), other.dstMask);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.inputIface)) {
        this.inputIface = data().deepCopy(fields()[11].schema(), other.inputIface);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.outputIface)) {
        this.outputIface = data().deepCopy(fields()[12].schema(), other.outputIface);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.octets)) {
        this.octets = data().deepCopy(fields()[13].schema(), other.octets);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.packets)) {
        this.packets = data().deepCopy(fields()[14].schema(), other.packets);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.tcpFlags)) {
        this.tcpFlags = data().deepCopy(fields()[15].schema(), other.tcpFlags);
        fieldSetFlags()[15] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Flow instance
     * @param other The existing instance to copy.
     */
    private Builder(com.fakecompany.flow.Flow other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.agent)) {
        this.agent = data().deepCopy(fields()[1].schema(), other.agent);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.protocol)) {
        this.protocol = data().deepCopy(fields()[2].schema(), other.protocol);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.srcAddr)) {
        this.srcAddr = data().deepCopy(fields()[3].schema(), other.srcAddr);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.srcAS)) {
        this.srcAS = data().deepCopy(fields()[4].schema(), other.srcAS);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.srcPort)) {
        this.srcPort = data().deepCopy(fields()[5].schema(), other.srcPort);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.srcMask)) {
        this.srcMask = data().deepCopy(fields()[6].schema(), other.srcMask);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.dstAddr)) {
        this.dstAddr = data().deepCopy(fields()[7].schema(), other.dstAddr);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dstAS)) {
        this.dstAS = data().deepCopy(fields()[8].schema(), other.dstAS);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.dstPort)) {
        this.dstPort = data().deepCopy(fields()[9].schema(), other.dstPort);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.dstMask)) {
        this.dstMask = data().deepCopy(fields()[10].schema(), other.dstMask);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.inputIface)) {
        this.inputIface = data().deepCopy(fields()[11].schema(), other.inputIface);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.outputIface)) {
        this.outputIface = data().deepCopy(fields()[12].schema(), other.outputIface);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.octets)) {
        this.octets = data().deepCopy(fields()[13].schema(), other.octets);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.packets)) {
        this.packets = data().deepCopy(fields()[14].schema(), other.packets);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.tcpFlags)) {
        this.tcpFlags = data().deepCopy(fields()[15].schema(), other.tcpFlags);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setTimestamp(long value) {
      validate(fields()[0], value);
      this.timestamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'agent' field.
      * @return The value.
      */
    public java.lang.Long getAgent() {
      return agent;
    }

    /**
      * Sets the value of the 'agent' field.
      * @param value The value of 'agent'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setAgent(long value) {
      validate(fields()[1], value);
      this.agent = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'agent' field has been set.
      * @return True if the 'agent' field has been set, false otherwise.
      */
    public boolean hasAgent() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'agent' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearAgent() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'protocol' field.
      * @return The value.
      */
    public java.lang.Integer getProtocol() {
      return protocol;
    }

    /**
      * Sets the value of the 'protocol' field.
      * @param value The value of 'protocol'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setProtocol(int value) {
      validate(fields()[2], value);
      this.protocol = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'protocol' field has been set.
      * @return True if the 'protocol' field has been set, false otherwise.
      */
    public boolean hasProtocol() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'protocol' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearProtocol() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcAddr' field.
      * @return The value.
      */
    public java.lang.Long getSrcAddr() {
      return srcAddr;
    }

    /**
      * Sets the value of the 'srcAddr' field.
      * @param value The value of 'srcAddr'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setSrcAddr(long value) {
      validate(fields()[3], value);
      this.srcAddr = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'srcAddr' field has been set.
      * @return True if the 'srcAddr' field has been set, false otherwise.
      */
    public boolean hasSrcAddr() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'srcAddr' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearSrcAddr() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcAS' field.
      * @return The value.
      */
    public java.lang.Integer getSrcAS() {
      return srcAS;
    }

    /**
      * Sets the value of the 'srcAS' field.
      * @param value The value of 'srcAS'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setSrcAS(int value) {
      validate(fields()[4], value);
      this.srcAS = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'srcAS' field has been set.
      * @return True if the 'srcAS' field has been set, false otherwise.
      */
    public boolean hasSrcAS() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'srcAS' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearSrcAS() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcPort' field.
      * @return The value.
      */
    public java.lang.Integer getSrcPort() {
      return srcPort;
    }

    /**
      * Sets the value of the 'srcPort' field.
      * @param value The value of 'srcPort'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setSrcPort(int value) {
      validate(fields()[5], value);
      this.srcPort = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'srcPort' field has been set.
      * @return True if the 'srcPort' field has been set, false otherwise.
      */
    public boolean hasSrcPort() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'srcPort' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearSrcPort() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcMask' field.
      * @return The value.
      */
    public java.lang.Integer getSrcMask() {
      return srcMask;
    }

    /**
      * Sets the value of the 'srcMask' field.
      * @param value The value of 'srcMask'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setSrcMask(int value) {
      validate(fields()[6], value);
      this.srcMask = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'srcMask' field has been set.
      * @return True if the 'srcMask' field has been set, false otherwise.
      */
    public boolean hasSrcMask() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'srcMask' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearSrcMask() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'dstAddr' field.
      * @return The value.
      */
    public java.lang.Long getDstAddr() {
      return dstAddr;
    }

    /**
      * Sets the value of the 'dstAddr' field.
      * @param value The value of 'dstAddr'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setDstAddr(long value) {
      validate(fields()[7], value);
      this.dstAddr = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'dstAddr' field has been set.
      * @return True if the 'dstAddr' field has been set, false otherwise.
      */
    public boolean hasDstAddr() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'dstAddr' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearDstAddr() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'dstAS' field.
      * @return The value.
      */
    public java.lang.Integer getDstAS() {
      return dstAS;
    }

    /**
      * Sets the value of the 'dstAS' field.
      * @param value The value of 'dstAS'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setDstAS(int value) {
      validate(fields()[8], value);
      this.dstAS = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'dstAS' field has been set.
      * @return True if the 'dstAS' field has been set, false otherwise.
      */
    public boolean hasDstAS() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'dstAS' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearDstAS() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'dstPort' field.
      * @return The value.
      */
    public java.lang.Integer getDstPort() {
      return dstPort;
    }

    /**
      * Sets the value of the 'dstPort' field.
      * @param value The value of 'dstPort'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setDstPort(int value) {
      validate(fields()[9], value);
      this.dstPort = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'dstPort' field has been set.
      * @return True if the 'dstPort' field has been set, false otherwise.
      */
    public boolean hasDstPort() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'dstPort' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearDstPort() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'dstMask' field.
      * @return The value.
      */
    public java.lang.Integer getDstMask() {
      return dstMask;
    }

    /**
      * Sets the value of the 'dstMask' field.
      * @param value The value of 'dstMask'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setDstMask(int value) {
      validate(fields()[10], value);
      this.dstMask = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'dstMask' field has been set.
      * @return True if the 'dstMask' field has been set, false otherwise.
      */
    public boolean hasDstMask() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'dstMask' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearDstMask() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputIface' field.
      * @return The value.
      */
    public java.lang.Integer getInputIface() {
      return inputIface;
    }

    /**
      * Sets the value of the 'inputIface' field.
      * @param value The value of 'inputIface'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setInputIface(int value) {
      validate(fields()[11], value);
      this.inputIface = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'inputIface' field has been set.
      * @return True if the 'inputIface' field has been set, false otherwise.
      */
    public boolean hasInputIface() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'inputIface' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearInputIface() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputIface' field.
      * @return The value.
      */
    public java.lang.Integer getOutputIface() {
      return outputIface;
    }

    /**
      * Sets the value of the 'outputIface' field.
      * @param value The value of 'outputIface'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setOutputIface(int value) {
      validate(fields()[12], value);
      this.outputIface = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'outputIface' field has been set.
      * @return True if the 'outputIface' field has been set, false otherwise.
      */
    public boolean hasOutputIface() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'outputIface' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearOutputIface() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'octets' field.
      * @return The value.
      */
    public java.lang.Long getOctets() {
      return octets;
    }

    /**
      * Sets the value of the 'octets' field.
      * @param value The value of 'octets'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setOctets(long value) {
      validate(fields()[13], value);
      this.octets = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'octets' field has been set.
      * @return True if the 'octets' field has been set, false otherwise.
      */
    public boolean hasOctets() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'octets' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearOctets() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'packets' field.
      * @return The value.
      */
    public java.lang.Long getPackets() {
      return packets;
    }

    /**
      * Sets the value of the 'packets' field.
      * @param value The value of 'packets'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setPackets(long value) {
      validate(fields()[14], value);
      this.packets = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'packets' field has been set.
      * @return True if the 'packets' field has been set, false otherwise.
      */
    public boolean hasPackets() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'packets' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearPackets() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'tcpFlags' field.
      * @return The value.
      */
    public java.lang.Integer getTcpFlags() {
      return tcpFlags;
    }

    /**
      * Sets the value of the 'tcpFlags' field.
      * @param value The value of 'tcpFlags'.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder setTcpFlags(int value) {
      validate(fields()[15], value);
      this.tcpFlags = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'tcpFlags' field has been set.
      * @return True if the 'tcpFlags' field has been set, false otherwise.
      */
    public boolean hasTcpFlags() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'tcpFlags' field.
      * @return This builder.
      */
    public com.fakecompany.flow.Flow.Builder clearTcpFlags() {
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Flow build() {
      try {
        Flow record = new Flow();
        record.timestamp = fieldSetFlags()[0] ? this.timestamp : (java.lang.Long) defaultValue(fields()[0]);
        record.agent = fieldSetFlags()[1] ? this.agent : (java.lang.Long) defaultValue(fields()[1]);
        record.protocol = fieldSetFlags()[2] ? this.protocol : (java.lang.Integer) defaultValue(fields()[2]);
        record.srcAddr = fieldSetFlags()[3] ? this.srcAddr : (java.lang.Long) defaultValue(fields()[3]);
        record.srcAS = fieldSetFlags()[4] ? this.srcAS : (java.lang.Integer) defaultValue(fields()[4]);
        record.srcPort = fieldSetFlags()[5] ? this.srcPort : (java.lang.Integer) defaultValue(fields()[5]);
        record.srcMask = fieldSetFlags()[6] ? this.srcMask : (java.lang.Integer) defaultValue(fields()[6]);
        record.dstAddr = fieldSetFlags()[7] ? this.dstAddr : (java.lang.Long) defaultValue(fields()[7]);
        record.dstAS = fieldSetFlags()[8] ? this.dstAS : (java.lang.Integer) defaultValue(fields()[8]);
        record.dstPort = fieldSetFlags()[9] ? this.dstPort : (java.lang.Integer) defaultValue(fields()[9]);
        record.dstMask = fieldSetFlags()[10] ? this.dstMask : (java.lang.Integer) defaultValue(fields()[10]);
        record.inputIface = fieldSetFlags()[11] ? this.inputIface : (java.lang.Integer) defaultValue(fields()[11]);
        record.outputIface = fieldSetFlags()[12] ? this.outputIface : (java.lang.Integer) defaultValue(fields()[12]);
        record.octets = fieldSetFlags()[13] ? this.octets : (java.lang.Long) defaultValue(fields()[13]);
        record.packets = fieldSetFlags()[14] ? this.packets : (java.lang.Long) defaultValue(fields()[14]);
        record.tcpFlags = fieldSetFlags()[15] ? this.tcpFlags : (java.lang.Integer) defaultValue(fields()[15]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Flow>
    WRITER$ = (org.apache.avro.io.DatumWriter<Flow>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Flow>
    READER$ = (org.apache.avro.io.DatumReader<Flow>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
